{
  "address": "EtWFjjyscJFt29nJp5vJdQmQ3usqY1dKmQnTbbNNPqGY",
  "metadata": {
    "name": "sale_handler",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "disable_partner",
      "discriminator": [13, 55, 104, 244, 56, 199, 102, 115],
      "accounts": [
        {
          "name": "partner",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "disable_sale_handler",
      "discriminator": [244, 226, 38, 40, 85, 67, 141, 136],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "disable_step",
      "discriminator": [117, 38, 241, 134, 228, 195, 102, 185],
      "accounts": [
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "enable_partner",
      "discriminator": [72, 14, 80, 99, 208, 251, 194, 163],
      "accounts": [
        {
          "name": "partner",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "enable_sale_handler",
      "discriminator": [47, 242, 204, 208, 88, 77, 219, 144],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "enable_step",
      "discriminator": [178, 157, 57, 104, 246, 119, 140, 175],
      "accounts": [
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "init",
      "discriminator": [220, 59, 207, 236, 108, 250, 47, 100],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true,
          "pda": {
            "seeds": []
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "init_partner",
      "discriminator": [221, 214, 183, 69, 22, 40, 219, 145],
      "accounts": [
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "_partner_code",
          "type": "string"
        },
        {
          "name": "main_interest",
          "type": "u64"
        },
        {
          "name": "secondary_interest",
          "type": "u64"
        }
      ]
    },
    {
      "name": "init_step",
      "discriminator": [79, 37, 14, 204, 178, 148, 196, 192],
      "accounts": [
        {
          "name": "step",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [83, 84, 69, 80]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "id"
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "id",
          "type": "i16"
        },
        {
          "name": "price",
          "type": "u64"
        },
        {
          "name": "total_supply",
          "type": "u128"
        }
      ]
    },
    {
      "name": "purchase_with_sol",
      "discriminator": [27, 238, 240, 155, 170, 180, 26, 118],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "purchaser",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 85, 82, 67, 72, 65, 83, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "price_update"
        },
        {
          "name": "bank_info",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "partner_code",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "purchase_with_usdc",
      "discriminator": [239, 251, 159, 72, 189, 180, 47, 135],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "purchaser",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 85, 82, 67, 72, 65, 83, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "purchaser_ata",
          "writable": true
        },
        {
          "name": "bank_ata",
          "writable": true
        },
        {
          "name": "partner_pda_ata",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "partner_code",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "purchase_with_usdt",
      "discriminator": [209, 71, 158, 181, 243, 126, 63, 241],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "purchaser",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 85, 82, 67, 72, 65, 83, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "account",
                "path": "payer"
              }
            ]
          }
        },
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "purchaser_ata",
          "writable": true
        },
        {
          "name": "bank_ata",
          "writable": true
        },
        {
          "name": "partner_pda_ata",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "partner_code",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "receive_sol",
      "discriminator": [121, 244, 250, 3, 8, 229, 225, 1],
      "accounts": [
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "ix_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "partner",
          "type": "string"
        },
        {
          "name": "deadline",
          "type": "u128"
        },
        {
          "name": "sig",
          "type": {
            "array": ["u8", 64]
          }
        },
        {
          "name": "idx",
          "type": "u32"
        }
      ]
    },
    {
      "name": "receive_usdc",
      "discriminator": [234, 4, 133, 7, 111, 131, 48, 237],
      "accounts": [
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "partner_ata",
          "writable": true
        },
        {
          "name": "partner_pda_ata",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "ix_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "partner",
          "type": "string"
        },
        {
          "name": "deadline",
          "type": "u128"
        },
        {
          "name": "sig",
          "type": {
            "array": ["u8", 64]
          }
        },
        {
          "name": "idx",
          "type": "u32"
        }
      ]
    },
    {
      "name": "receive_usdt",
      "discriminator": [192, 212, 105, 29, 61, 88, 125, 227],
      "accounts": [
        {
          "name": "partner",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [80, 65, 82, 84, 78, 69, 82]
              },
              {
                "kind": "const",
                "value": [95]
              },
              {
                "kind": "arg",
                "path": "partner_code"
              }
            ]
          }
        },
        {
          "name": "partner_ata",
          "writable": true
        },
        {
          "name": "partner_pda_ata",
          "writable": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "ix_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "partner",
          "type": "string"
        },
        {
          "name": "deadline",
          "type": "u128"
        },
        {
          "name": "sig",
          "type": {
            "array": ["u8", 64]
          }
        },
        {
          "name": "idx",
          "type": "u32"
        }
      ]
    },
    {
      "name": "set_partner_interest",
      "discriminator": [12, 74, 170, 118, 125, 171, 78, 169],
      "accounts": [
        {
          "name": "partner",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "main_interest",
          "type": "u64"
        },
        {
          "name": "secondary_interest",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_sale_handler_cap",
      "discriminator": [176, 174, 114, 22, 87, 53, 72, 6],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "max_cap",
          "type": "u64"
        },
        {
          "name": "min_cap",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_sale_handler_partner_interest",
      "discriminator": [66, 243, 19, 3, 139, 168, 76, 185],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "main_interest",
          "type": "u64"
        },
        {
          "name": "secondary_interest",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_sale_handler_purchase_bonus",
      "discriminator": [48, 27, 155, 123, 142, 125, 123, 115],
      "accounts": [
        {
          "name": "sale_handler",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "thresholds",
          "type": {
            "vec": "u64"
          }
        },
        {
          "name": "percents",
          "type": {
            "vec": "u64"
          }
        }
      ]
    },
    {
      "name": "set_step_price",
      "discriminator": [158, 185, 23, 146, 123, 228, 216, 239],
      "accounts": [
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "price",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_step_supply",
      "discriminator": [43, 27, 231, 48, 68, 147, 129, 0],
      "accounts": [
        {
          "name": "step",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "total_supply",
          "type": "u128"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Partner",
      "discriminator": [122, 43, 246, 239, 141, 56, 243, 182]
    },
    {
      "name": "PriceUpdateV2",
      "discriminator": [34, 241, 35, 99, 157, 126, 244, 205]
    },
    {
      "name": "Purchaser",
      "discriminator": [97, 76, 239, 54, 67, 65, 19, 121]
    },
    {
      "name": "SaleHandler",
      "discriminator": [220, 151, 165, 55, 199, 17, 104, 156]
    },
    {
      "name": "Step",
      "discriminator": [215, 98, 129, 236, 116, 128, 24, 137]
    }
  ],
  "events": [
    {
      "name": "PurchaseWithSol",
      "discriminator": [214, 189, 229, 190, 99, 63, 237, 211]
    },
    {
      "name": "PurchaseWithUsdc",
      "discriminator": [93, 119, 171, 151, 188, 64, 202, 186]
    },
    {
      "name": "PurchaseWithUsdt",
      "discriminator": [20, 69, 116, 47, 61, 69, 239, 138]
    },
    {
      "name": "ReceiveSol",
      "discriminator": [63, 102, 203, 174, 235, 47, 21, 217]
    },
    {
      "name": "ReceiveUsdc",
      "discriminator": [211, 98, 63, 202, 17, 92, 228, 159]
    },
    {
      "name": "ReceiveUsdt",
      "discriminator": [32, 152, 86, 93, 220, 243, 230, 201]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "Unauthorized",
      "msg": "Unauthorized"
    },
    {
      "code": 6001,
      "name": "SignatureVerificationFailed",
      "msg": "Signature verification failed."
    },
    {
      "code": 6002,
      "name": "SaleHandlerEnabled",
      "msg": "SaleHandler already enabled"
    },
    {
      "code": 6003,
      "name": "SaleHandlerDisabled",
      "msg": "SaleHandler already disabled"
    },
    {
      "code": 6004,
      "name": "SaleHandlerNotEnabled",
      "msg": "SaleHandler not enabled"
    },
    {
      "code": 6005,
      "name": "SaleHandlerMinCapTooLarge",
      "msg": "SaleHandler min cap larger than max cap"
    },
    {
      "code": 6006,
      "name": "SaleHandlerMinCapNotReached",
      "msg": "SaleHandler min cap not reached"
    },
    {
      "code": 6007,
      "name": "SaleHandlerMaxCapExceeded",
      "msg": "SaleHandler max cap exceeded"
    },
    {
      "code": 6008,
      "name": "SaleHandlerMainPartnerInterestTooLarge",
      "msg": "SaleHandler main partner interest too large"
    },
    {
      "code": 6009,
      "name": "SaleHandlerSecondaryPartnerInterestTooLarge",
      "msg": "SaleHandler secondary partner interest too large"
    },
    {
      "code": 6010,
      "name": "StepSupplyTooSmall",
      "msg": "Step supply is too small"
    },
    {
      "code": 6011,
      "name": "StepEnabled",
      "msg": "Step already enabled"
    },
    {
      "code": 6012,
      "name": "StepDisabled",
      "msg": "Step already disabled"
    },
    {
      "code": 6013,
      "name": "StepNotEnabled",
      "msg": "Step not enabled"
    },
    {
      "code": 6014,
      "name": "StepSupplyExceeded",
      "msg": "Step total supply exceeded"
    },
    {
      "code": 6015,
      "name": "InactiveStep",
      "msg": "Inactive step account"
    },
    {
      "code": 6016,
      "name": "WrongPriceFeedId",
      "msg": "Wrong price feed account"
    },
    {
      "code": 6017,
      "name": "WrongStablecoin",
      "msg": "Wrong stablecoin account"
    },
    {
      "code": 6018,
      "name": "WrongBank",
      "msg": "Wrong bank account"
    },
    {
      "code": 6019,
      "name": "PriceIsDown",
      "msg": "Oracle price is down"
    },
    {
      "code": 6020,
      "name": "PartnerNoFunds",
      "msg": "Partner no funds"
    },
    {
      "code": 6021,
      "name": "ExpiredSignature",
      "msg": "Expired signature"
    },
    {
      "code": 6022,
      "name": "WrongBonusesLens",
      "msg": "Wrong Bonuses Lens"
    },
    {
      "code": 6023,
      "name": "WrongBonusesValues",
      "msg": "Wrong Bonuses Values"
    }
  ],
  "types": [
    {
      "name": "Partner",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "main_interest",
            "type": "u64"
          },
          {
            "name": "secondary_interest",
            "type": "u64"
          },
          {
            "name": "sol_reward",
            "type": "u64"
          },
          {
            "name": "usdt_reward",
            "type": "u64"
          },
          {
            "name": "usdc_reward",
            "type": "u64"
          },
          {
            "name": "token_reward",
            "type": "u128"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "PriceFeedMessage",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "feed_id",
            "type": {
              "array": ["u8", 32]
            }
          },
          {
            "name": "price",
            "type": "i64"
          },
          {
            "name": "conf",
            "type": "u64"
          },
          {
            "name": "exponent",
            "type": "i32"
          },
          {
            "name": "publish_time",
            "docs": ["The timestamp of this price update in seconds"],
            "type": "i64"
          },
          {
            "name": "prev_publish_time",
            "docs": [
              "The timestamp of the previous price update. This field is intended to allow users to",
              "identify the single unique price update for any moment in time:",
              "for any time t, the unique update is the one such that prev_publish_time < t <= publish_time.",
              "",
              "Note that there may not be such an update while we are migrating to the new message-sending logic,",
              "as some price updates on pythnet may not be sent to other chains (because the message-sending",
              "logic may not have triggered). We can solve this problem by making the message-sending mandatory",
              "(which we can do once publishers have migrated over).",
              "",
              "Additionally, this field may be equal to publish_time if the message is sent on a slot where",
              "where the aggregation was unsuccesful. This problem will go away once all publishers have",
              "migrated over to a recent version of pyth-agent."
            ],
            "type": "i64"
          },
          {
            "name": "ema_price",
            "type": "i64"
          },
          {
            "name": "ema_conf",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PriceUpdateV2",
      "docs": [
        "A price update account. This account is used by the Pyth Receiver program to store a verified price update from a Pyth price feed.",
        "It contains:",
        "- `write_authority`: The write authority for this account. This authority can close this account to reclaim rent or update the account to contain a different price update.",
        "- `verification_level`: The [`VerificationLevel`] of this price update. This represents how many Wormhole guardian signatures have been verified for this price update.",
        "- `price_message`: The actual price update.",
        "- `posted_slot`: The slot at which this price update was posted."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "write_authority",
            "type": "pubkey"
          },
          {
            "name": "verification_level",
            "type": {
              "defined": {
                "name": "VerificationLevel"
              }
            }
          },
          {
            "name": "price_message",
            "type": {
              "defined": {
                "name": "PriceFeedMessage"
              }
            }
          },
          {
            "name": "posted_slot",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PurchaseWithSol",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "step",
            "type": "i16"
          },
          {
            "name": "purchaser",
            "type": "pubkey"
          },
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "usd_equivalent",
            "type": "u128"
          },
          {
            "name": "sol_amount",
            "type": "u64"
          },
          {
            "name": "token_amount",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "PurchaseWithUsdc",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "step",
            "type": "i16"
          },
          {
            "name": "purchaser",
            "type": "pubkey"
          },
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "usd_equivalent",
            "type": "u128"
          },
          {
            "name": "usdc_amount",
            "type": "u64"
          },
          {
            "name": "token_amount",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "PurchaseWithUsdt",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "step",
            "type": "i16"
          },
          {
            "name": "purchaser",
            "type": "pubkey"
          },
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "usd_equivalent",
            "type": "u128"
          },
          {
            "name": "usdt_amount",
            "type": "u64"
          },
          {
            "name": "token_amount",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "Purchaser",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "purchased",
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "ReceiveSol",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ReceiveUsdc",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ReceiveUsdt",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "partner",
            "type": "string"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "SaleHandler",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "max_cap",
            "type": "u64"
          },
          {
            "name": "min_cap",
            "type": "u64"
          },
          {
            "name": "main_interest",
            "type": "u64"
          },
          {
            "name": "secondary_interest",
            "type": "u64"
          },
          {
            "name": "total_sold",
            "type": "u128"
          },
          {
            "name": "step",
            "type": "i16"
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "sale_handler::state::sale_handler::Status"
              }
            }
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "bonus_percents",
            "type": {
              "vec": "u64"
            }
          },
          {
            "name": "bonus_thresholds",
            "type": {
              "vec": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "Step",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "id",
            "type": "i16"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "total_sold",
            "type": "u128"
          },
          {
            "name": "total_supply",
            "type": "u128"
          },
          {
            "name": "status",
            "type": {
              "defined": {
                "name": "sale_handler::state::step::Status"
              }
            }
          }
        ]
      }
    },
    {
      "name": "VerificationLevel",
      "docs": [
        "Pyth price updates are bridged to all blockchains via Wormhole.",
        "Using the price updates on another chain requires verifying the signatures of the Wormhole guardians.",
        "The usual process is to check the signatures for two thirds of the total number of guardians, but this can be cumbersome on Solana because of the transaction size limits,",
        "so we also allow for partial verification.",
        "",
        "This enum represents how much a price update has been verified:",
        "- If `Full`, we have verified the signatures for two thirds of the current guardians.",
        "- If `Partial`, only `num_signatures` guardian signatures have been checked.",
        "",
        "# Warning",
        "Using partially verified price updates is dangerous, as it lowers the threshold of guardians that need to collude to produce a malicious price update."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Partial",
            "fields": [
              {
                "name": "num_signatures",
                "type": "u8"
              }
            ]
          },
          {
            "name": "Full"
          }
        ]
      }
    },
    {
      "name": "sale_handler::state::sale_handler::Status",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "Enabled"
          },
          {
            "name": "Disabled"
          }
        ]
      }
    },
    {
      "name": "sale_handler::state::step::Status",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "Enabled"
          },
          {
            "name": "Disabled"
          }
        ]
      }
    }
  ]
}
